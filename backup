#!/bin/bash

MY_NAME="pingsoli"
MY_HOME="/home/$MY_NAME"

SRC_VIM_CONF="$MY_HOME/.vimrc"
SRC_VIM_SNIPPETS_DIR="$MY_HOME/.vim/UltiSnips"
SRC_YCM_CONF="$MY_HOME/.vim/.ycm_extra_conf.py"

SRC_TMUX_CONF="$MY_HOME/.tmux.conf"
SRC_FISH_CONF_DIR="$MY_HOME/.config/fish"

DST_VIM_DIR="./vim"
DST_TMUX_DIR="./tmux"
DST_FISH_DIR="./fish"

create_if_nonexist()
{
  for dir in "$@"; do
   if [ ! -d "$dir" ]; then
     echo "Creating $dir_name..."
     mkdir -p "$dir"
   fi
  done
}

backup()
{
  local wanted_dirs=($DST_VIM_DIR $DST_TMUX_DIR $DST_FISH_DIR)
  for dir_name in ${wanted_dirs[@]}; do
    create_if_nonexist $dir_name
  done

  # Show all executing command
  set -x

  # Fish
  cp -r "$SRC_FISH_CONF_DIR/"*  "$DST_FISH_DIR"

  # Tmux
  cp    "$SRC_TMUX_CONF"        "$DST_TMUX_DIR"

  # Vim
  cp    "$SRC_VIM_CONF"         "$DST_VIM_DIR"
  mkdir -p "$DST_VIM_DIR/.vim/UltiSnips" && \
  cp -r "$SRC_VIM_SNIPPETS_DIR/"* "$DST_VIM_DIR/.vim/UltiSnips"
  cp    "$SRC_YCM_CONF"           "$DST_VIM_DIR/.vim"

  # set +x not echo
  { set +x; } 2>/dev/null
}

push()
{
  git add .
  git commit -m "$1"
  git push origin master
}

recover()
{
  local wanted_dirs=($MY_HOME/.config $MY_HOME/.vim)
  for dir_name in ${wanted_dirs[@]}; do
    create_if_nonexist $dir_name
  done

  # Show all executing command
  set -x

  cp "./vim/.vimrc" "$MY_HOME"
  cp -r "./vim/.vim" "$MY_HOME"
  cp "./tmux/.tmux.conf" "$MY_HOME"
  cp -r "./fish" "$MY_HOME/.config"

  # set +x not echo
  { set +x; } 2>/dev/null
}

help()
{
  echo -e "\nUsage: "
  echo -e "  $0 <start|s>       backup all useful dotfiles"
  echo -e "  $0 <push|p> <msg>  backup and push to remote master branch"
  echo -e "  $0 <recover|r>     copy files to specific location and overwrite it"
  echo -e "  $0 <help|h>        show manual"
}

case "$1" in
  start|s)
    backup
    ;;

  push|p)
    backup

    if [ "$#" -ne 2 ]; then
      echo -e "no commit message\nusage: ./backup push <msg>"
      exit 1
    fi

    push "$2"
    ;;

  recover|r)
    recover
    ;;

  help|h)
    help
    ;;

  *)
    help
esac
