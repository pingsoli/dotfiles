#!/bin/bash

VIM_CONF="$HOME/.vimrc"
VIM_SNIPPETS="$HOME/.vim/UltiSnips"
YCM_CONF="$HOME/.vim/.ycm_extra_conf.py"

TMUX_CONF="$HOME/.tmux.conf"
FISH_CONF="$HOME/.config/fish"

backup()
{
  if [ ! -e ".vim/plugin" ]; then
    mkdir .config/
    mkdir -p .vim/plugin/
  fi

  # Show all executing command
  set -x

  cp -r "$FISH_CONF"    ".config"
  cp    "$TMUX_CONF"    "."

  # VIM
  cp    "$VIM_CONF"     "."
  cp    "$YCM_CONF"     ".vim"
  cp -r "$VIM_SNIPPETS" ".vim"

  # set +x not echo
  { set +x; } 2>/dev/null
}

push()
{
  git add .
  git commit -m "$1"
  git push origin master
}

recover()
{
  DEST_DIR="/home/pingsoli"

  if [ ! -d "$DEST_DIR" ]; then
    mkdir "$DEST_DIR"
  fi

  cp ".vimrc" "$DEST_DIR"
  cp -r ".vim" "$DEST_DIR"
  cp ".tmux.conf" "$DEST_DIR"
  cp -r ".config" "$DEST_DIR"
}

help()
{
  echo -e "\nUsage: "
  echo -e "  $0 <start|s>       backup all useful dotfiles"
  echo -e "  $0 <push|p> <msg>  backup and push to remote master branch"
  echo -e "  $0 <recover|r>     copy files of current directory to specific location"
  echo -e "  $0 <help|h>        show manual"
}

case "$1" in
  start|s)
    backup
    ;;

  push|p)
    backup

    if [ "$#" -ne 2 ]; then
      echo -e "no commit message\nusage: ./backup push <msg>"
      exit 1
    fi

    push "$2"
    ;;

  recover|r)
    recover
    ;;

  help|h)
    help
    ;;

  *)
    help
esac
