################################################################################
# tmux configuration
################################################################################
# Basic operations
# $ tmux new -s <session-name> - Create a new tmux session
# $ tmux a -t <session-name>   - Attach to specific tmux session

# -- Custom Settings -----------------------------------------------------------
# Change prefix `C-b` to `C-a`
set -g prefix C-a
unbind C-b
bind C-a send-prefix

unbind Up
unbind Down
unbind Left
unbind Right

unbind C-Up
unbind C-Down
unbind C-Left
unbind C-Right

# cancel markig
unbind C-M

#  bind C-0 select-pane -t 0
# bind C-1 select-pane -t 1
# bind C-2 select-pane -t 2
# bind C-3 select-pane -t 3
# bind C-4 select-pane -t 4

# Version-specific commands
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
             sed -En "s/^tmux ([^0-9]*)([0-9]+(.[0-9]+)?).*/\2/p")'

# # Unbind the default keys of spliting pane and navigate tmux window
unbind '"'
unbind %

# Set '|' for vertical and '-' for horizontal split
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' " \
  bind \\ split-window -h -c '#{pane_current_path}'"
if-shell -b '[ "$(echo "$TMUX_VERSION > 2.8" | bc)" = 1 ]' " \
  bind \\\ split-window -h -c '#{pane_current_path}'"
bind - split-window -v -c '#{pane_current_path}'

# bind '%' split-window -h -c '#{pane_current_path}' \; send-keys -l 'cmd build' \; send-keys 'c-m' 'c-l'
# bind '"' split-window -v -c '#{pane_current_path}' \; send-keys -l 'cmd build' \; send-keys 'c-m' 'c-l'

# vim-like pane switching
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

# Kill other panes except current one in current window
bind / kill-pane -a

# vim-like pane resizing, repeat press.
# bind -n c-k resize-pane -U 8
bind c-k resize-pane -U 10
bind C-j resize-pane -D 10
bind C-h resize-pane -L 10
bind C-l resize-pane -R 10

# vim-like in copy-mode
setw -g mode-keys vi
bind -T copy-mode-vi 'v'   send -X begin-selection  # Begin selection in copy mode.
bind -T copy-mode-vi 'C-v' send -X rectangle-toggle # Begin selection in copy mode.
bind -T copy-mode-vi 'y'   send -X copy-selection   # Yank  selection in copy mode.

set -sg escape-time 1

# Tmux 2.1 and newer, allow mouse movements
# Toggle mouse on tmux
bind m run "\
  tmux show-options -g | grep -q \"mouse\\s*on\";  \
  if [ \$? = 0 ]; then                             \
      toggle=off;                                  \
  else                                             \
      toggle=on;                                   \
  fi;                                              \
  tmux display-message \"mouse is now: \$toggle\"; \
  tmux set-option -w mouse \$toggle;               \
  tmux set-option -g mouse \$toggle;               \
  "

# Send C-c to all other panes in the same window
unbind t
bind t run "\
  curr_pane_idx=$(tmux display -pt \"\$TMUX_PANE\" '#{pane_index}'); \
  for pane_idx in $(tmux list-panes -F '##{pane_index}'); do         \
    if [ \$pane_idx != \$curr_pane_idx ]; then                       \
      tmux send-keys -t \$pane_idx C-c;                              \
    fi;                                                              \
  done;                                                              \
  "

# Option synchronize-panes toggle
unbind u
bind u run "\
  tmux show-options -w | grep -q \"synchronize-panes\\s*on\"; \
  if [ \$? = 0 ]; then                                        \
      toggle=off;                                             \
  else                                                        \
      toggle=on;                                              \
  fi;                                                         \
  tmux display-message \"synchonize-panes is now: \$toggle\"; \
  tmux set-option -w synchronize-panes \$toggle;              \
  "

# Reload tmux config
bind r source-file ~/.tmux.conf \; display-message " * tmux.conf is reloaded"

# Change to 'build' folder quickly for CMake building
bind b send-keys -l 'cmd (tmux display -p -F "#{pane_current_path}" -t0)/build' \; \
  send-keys 'C-m' 'C-l'

# -- Theme Settings ------------------------------------------------------------
# `:TmuxlineSnapshot [file]` export your tmuxline config
# `source-file [file]` to source your tmuxline config or put the config in tmux.conf

set -g default-terminal "screen-256color"
set -g status-justify "centre"
set -g renumber-windows "on"
set -g status "on"

# Tmux 2.8 or older color settings                                                        
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' ' \
  set -g pane-border-fg "colour238";             \
  set -g pane-active-border-fg "colour190";      \
  set -g status-attr "none";                     \
  set -g status-bg "colour234";                  \
  set -g status-left-length "100";               \
  set -g status-left-attr "none";                \
  set -g status-right-attr "none";               \
  set -g status-right-length "100";              \
  set -g message-fg "colour255";                 \
  set -g message-bg "colour238";                 \
  set -g message-command-fg "colour255";         \
  set -g message-command-bg "colour238";         \
  setw -g window-status-fg "colour238";          \
  setw -g window-status-bg "colour234";          \
  setw -g window-status-attr "none";             \
  setw -g window-status-activity-fg "colour190"; \
  setw -g window-status-activity-bg "colour234"; \
  setw -g window-status-activity-attr "none"'

# Tmux 2.9 or newer color settings
if-shell -b '[ "$(echo "$TMUX_VERSION > 2.9" | bc)" = 1 ]' '     \
  set -g status-style fg="colour190",bg="colour234",none;        \
  set -g status-left-style fg="colour190",bg="colour234",none;   \
  set -g status-left-length "100";                               \
  set -g status-right-style fg="colour190",bg="colour234",none;  \
  set -g message-command-style fg="colour255",bg="colour238";    \
  set -g pane-active-border-style fg="colour190";                \
  set -g pane-border-style fg="colour238";                       \
  set -g message-style fg="colour255",bg="colour238";            \
  set -g window-status-style fg="colour190",bg="colour234",none; \
  set -g window-status-style fg="colour190",bg="colour234",none'

# displays "prefix" (in red) in statusline when prefix is pressed
# set -g status-right "#[bg=red]#{s/root//:client_key_table}"

# #S session name
# #I window index
# #W window name
setw -g status-left "#[fg=colour190,bg=colour238] #S #[fg=colour190,bg=colour238,nobold,nounderscore,noitalics]"
setw -g status-right none
setw -g window-status-separator none
setw -g window-status-format "#[fg=colour234,bg=colour234,nobold,nounderscore,noitalics]#[default] #I  #W #[fg=colour234,bg=colour234,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=colour235,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour238] #I  #W #[fg=colour238,bg=colour234,nobold,nounderscore,noitalics]"
